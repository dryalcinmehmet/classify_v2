"""empty message

Revision ID: 5e679f8a6888
Revises: 
Create Date: 2020-11-04 15:40:55.835574

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5e679f8a6888'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_cognituslog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cog_language_parameter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('statu', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cog_module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('statu', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('model_name', sa.String(), nullable=True),
    sa.Column('stopword', sa.Boolean(), nullable=True),
    sa.Column('stemming', sa.Boolean(), nullable=True),
    sa.Column('remove_numbers', sa.Boolean(), nullable=True),
    sa.Column('deasciify', sa.Boolean(), nullable=True),
    sa.Column('remove_punkt', sa.Boolean(), nullable=True),
    sa.Column('lowercase', sa.Boolean(), nullable=True),
    sa.Column('spellcheck', sa.Boolean(), nullable=True),
    sa.Column('wordngram_start', sa.Integer(), nullable=True),
    sa.Column('wordngram_end', sa.Integer(), nullable=True),
    sa.Column('accuracy', sa.Integer(), nullable=True),
    sa.Column('phrase_match', sa.Boolean(), nullable=True),
    sa.Column('shuffle_phrase_match', sa.Boolean(), nullable=True),
    sa.Column('word_match', sa.Boolean(), nullable=True),
    sa.Column('partial_match_rate', sa.Float(), nullable=True),
    sa.Column('attributes', sa.Text(), nullable=True),
    sa.Column('target', sa.Text(), nullable=True),
    sa.Column('auto_train_when_data_change', sa.Boolean(), nullable=True),
    sa.Column('return_unknown_category', sa.Boolean(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=True),
    sa.Column('module_type_id', sa.Integer(), nullable=True),
    sa.Column('attribute_limit', sa.Integer(), nullable=True),
    sa.Column('data_limit', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['cog_language_parameter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cog_module_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['cog_module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dashboard_trainlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('is_running', sa.Boolean(), nullable=True),
    sa.Column('data_count', sa.Integer(), nullable=True),
    sa.Column('used_stopwords', sa.Boolean(), nullable=True),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('celery_task_status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['cog_module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_classifyfeedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('predicted_category', sa.String(), nullable=True),
    sa.Column('true_category', sa.String(), nullable=True),
    sa.Column('label', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['log_id'], ['api_cognituslog.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['cog_module.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('log_id')
    )
    op.create_table('user_classifytrain',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('is_finished', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['cog_module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cog_module_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_number', sa.Integer(), nullable=True),
    sa.Column('precision', sa.Float(), nullable=True),
    sa.Column('recall', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('f1_score', sa.Float(), nullable=True),
    sa.Column('truepositive', sa.Integer(), nullable=True),
    sa.Column('truenegative', sa.Integer(), nullable=True),
    sa.Column('falsepositive', sa.Integer(), nullable=True),
    sa.Column('falsenegative', sa.Integer(), nullable=True),
    sa.Column('gmean', sa.Float(), nullable=True),
    sa.Column('statu', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('keywords', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('confusion_matrix', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('confusion_matrix_classes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('auc_score', sa.Float(), nullable=True),
    sa.Column('auprc_score', sa.Float(), nullable=True),
    sa.Column('true_positive_rate', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('false_positive_rate', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('thresholds', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('pr', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('rec', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('thr', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('precision_recall_curve', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('roc', sa.Float(), nullable=True),
    sa.Column('pr_curve', sa.Text(), nullable=True),
    sa.Column('roc_curve', sa.Text(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('parent_category_id', sa.Integer(), nullable=True),
    sa.Column('train_log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['cog_module.id'], ),
    sa.ForeignKeyConstraint(['train_log_id'], ['dashboard_trainlog.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cog_module_category')
    op.drop_table('user_classifytrain')
    op.drop_table('user_classifyfeedback')
    op.drop_table('dashboard_trainlog')
    op.drop_table('cog_module_data')
    op.drop_table('cog_module')
    op.drop_table('cog_language_parameter')
    op.drop_table('api_cognituslog')
    # ### end Alembic commands ###
